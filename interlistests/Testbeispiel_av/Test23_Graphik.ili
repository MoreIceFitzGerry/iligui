INTERLIS 2.3;

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!
!! Beispiel fuer eine Graphikdefinition zu Testdatensatz INTERLIS 2.3
!!
!! Version: 1.0
!! Sprache: Deutsch
!! Dateiname: Test23_Graphik.ili
!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

CONTRACTED MODEL Test23_Graphik (de) AT "http://www.interlis.ch/" VERSION "2015-03-06" =

  IMPORTS Test23,Test23_gr,StandardSymbology;
  SIGN BASKET Signs ~ StandardSymbology.StandardSigns
    OBJECTS OF TextSign: Text_14_kursiv, Text_18_kursiv, Text_20_normal, Text_20_kursiv,
                         Text_23_kursiv, Text_25_kursiv, Text_30_kursiv, Text_40_normal,
                         Text_40_kursiv, Text_50_normal, Text_50_kursiv, Text_70_normal,
                         Text_70_kursiv
    OBJECTS OF SymbolSign: Symbol_LFP_begehbar, Symbol_LFP_nicht_begehbar, Symbol_HFP,
                           Symbol_LFP3_Stein, Symbol_LFP3_Kunststoffzeichen, Symbol_LFP3_Bolzen,
                           Symbol_LFP3_Rohr, Symbol_LFP3_Pfahl, Symbol_LFP3_Kreuz,
                           Symbol_Flussrichtung, Symbol_Schilfguertel, Symbol_Wasserbecken,
                           Symbol_Moor, Symbol_Rebe, Symbol_Grotte_Hoehleneingang,
                           Symbol_einzelner_Fels, Symbol_Mast_Antenne, Symbol_Quelle,
                           Symbol_Bildstock_Kruzifix, Symbol_Denkmal, Symbol_Faehre,
                           Symbol_Baum, Symbol_Bezugspunkt, Symbol_GP_Stein,
                           Symbol_GP_Kunststoffzeichen, Symbol_GP_Bolzen, Symbol_GP_Rohr,
                           Symbol_GP_Pfahl, Symbol_GP_Kreuz, Symbol_GP_unversichert,
                           Symbol_kleiner_Kreis, Symbol_kleines_Kreuz, Symbol_Signal,
                           Symbol_Tafel_Stein
    OBJECTS OF PolylineSign: Linie_050_ausgezogen, Linie_035_strichliert,
                             Linie_018_strichliert, Linie_018_ausgezogen,
                             Linie_018_punktiert, Linie_018_strichliert1,
                             Linie_018_strichliert2, Linie_018_strichpunktiert1,
                             Linie_018_strichpunktiert2
    OBJECTS OF SurfaceSign: Flaeche_befestigt, Flaeche_humusiert, Flaeche_Wiese,
                            Flaeche_Gewaesser, Flaeche_bestockt, Flaeche_vegetationslos;

  FUNCTION CFormat(f:TEXT; s:TEXT):TEXT
    //formatiert Text s gemäss C-Formatstring f//;
  FUNCTION pointOf(obj:OBJECT OF ANYCLASS):Test23.LKoord
    //liefert erste Koordinate des Objekts //;
  FUNCTION lineOf(obj:OBJECT OF ANYCLASS): POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord
    //liefert erste Linie des Objekts //;

  TOPIC FixpunkteKategorie1 =

    DEPENDS ON Test23.FixpunkteKategorie1,
               Test23_gr.FixpunkteKategorie1;

    GRAPHIC LFP1TextGr BASED ON Test23_gr.FixpunkteKategorie1.LFP1PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_normal};
          Txt := Objekt->Nummer;
          Geometry := LFP1Pos->Pos->Pos;
          Rotation := LFP1Pos->Pos->Ori;
          HAli := LFP1Pos->Pos->HAli;
          VAli := LFP1Pos->Pos->VAli;
          Priority := 404
        );
    END LFP1TextGr;

    GRAPHIC LFP1SymbolGr BASED ON Test23_gr.FixpunkteKategorie1.LFP1SymbolAssoc =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := ACCORDING Objekt->Begehbarkeit (
            {Symbol_LFP_begehbar} WHEN IN #begehbar,
            {Symbol_LFP_nicht_begehbar} WHEN IN #nicht_begehbar
          );
          Geometry := Objekt->Geometrie;
          Rotation := LFP1Symbol->Ori;
          Priority := 403
        );
    END LFP1SymbolGr;

    GRAPHIC HFP1TextGr BASED ON Test23_gr.FixpunkteKategorie1.HFP1PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_normal};
          Txt := Objekt->Nummer;
          Geometry := HFP1Pos->Pos->Pos;
          Rotation := HFP1Pos->Pos->Ori;
          HAli := HFP1Pos->Pos->HAli;
          VAli := HFP1Pos->Pos->VAli;
          Priority := 404
        );
    END HFP1TextGr;

    GRAPHIC HFP1SymbolGr BASED ON Test23.FixpunkteKategorie1.HFP1 =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := {Symbol_HFP};
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 403
        );
    END HFP1SymbolGr;

  END FixpunkteKategorie1;


  TOPIC FixpunkteKategorie2 =

    DEPENDS ON Test23.FixpunkteKategorie2,
               Test23_gr.FixpunkteKategorie2;

    GRAPHIC LFP2TextGr BASED ON Test23_gr.FixpunkteKategorie2.LFP2PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_normal};
          Txt := Objekt->Nummer;
          Geometry := LFP2Pos->Pos->Pos;
          Rotation := LFP2Pos->Pos->Ori;
          HAli := LFP2Pos->Pos->HAli;
          VAli := LFP2Pos->Pos->VAli;
          Priority := 404
        );
    END LFP2TextGr;

    GRAPHIC LFP2SymbolGr BASED ON Test23_gr.FixpunkteKategorie2.LFP2SymbolAssoc =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := ACCORDING Objekt->Begehbarkeit (
            {Symbol_LFP_begehbar} WHEN IN #begehbar,
            {Symbol_LFP_nicht_begehbar} WHEN IN #nicht_begehbar
          );
          Geometry := Objekt->Geometrie;
          Rotation := LFP2Symbol->Ori;
          Priority := 403
        );
    END LFP2SymbolGr;

    GRAPHIC HFP2TextGr BASED ON Test23_gr.FixpunkteKategorie2.HFP2PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_normal};
          Txt := Objekt->Nummer;
          Geometry := HFP2Pos->Pos->Pos;
          Rotation := HFP2Pos->Pos->Ori;
          HAli := HFP2Pos->Pos->HAli;
          VAli := HFP2Pos->Pos->VAli;
          Priority := 404
        );
    END HFP2TextGr;

    GRAPHIC HFP2SymbolGr BASED ON Test23.FixpunkteKategorie2.HFP2 =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := {Symbol_HFP};
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 403
        );
    END HFP2SymbolGr;

  END FixpunkteKategorie2;


  TOPIC FixpunkteKategorie3 =

    DEPENDS ON Test23.FixpunkteKategorie3,
               Test23_gr.FixpunkteKategorie3;

    GRAPHIC LFP3TextGr BASED ON Test23_gr.FixpunkteKategorie3.LFP3PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_kursiv};
          Txt := Objekt->Nummer;
          Geometry := LFP3Pos->Pos->Pos;
          Rotation := LFP3Pos->Pos->Ori;
          HAli := LFP3Pos->Pos->HAli;
          VAli := LFP3Pos->Pos->VAli;
          Priority := 404
        );
    END LFP3TextGr;

    GRAPHIC LFP3SymbolGr BASED ON Test23_gr.FixpunkteKategorie3.LFP3SymbolAssoc =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := ACCORDING Objekt->Punktzeichen (
            {Symbol_LFP3_Stein} WHEN IN #Stein,
            {Symbol_LFP3_Kunststoffzeichen} WHEN IN #Kunststoffzeichen,
            {Symbol_LFP3_Bolzen} WHEN IN #Bolzen,
            {Symbol_LFP3_Rohr} WHEN IN #Rohr,
            {Symbol_LFP3_Pfahl} WHEN IN #Pfahl,
            {Symbol_LFP3_Kreuz} WHEN IN #Kreuz
          );
          Geometry := Objekt->Geometrie;
          Rotation := LFP3Symbol->Ori;
          Priority := 403
        );
    END LFP3SymbolGr;

    GRAPHIC HFP3TextGr BASED ON Test23_gr.FixpunkteKategorie3.HFP3PosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := {Text_20_kursiv};
          Txt := Objekt->Nummer;
          Geometry := HFP3Pos->Pos->Pos;
          Rotation := HFP3Pos->Pos->Ori;
          HAli := HFP3Pos->Pos->HAli;
          VAli := HFP3Pos->Pos->VAli;
          Priority := 404
        );
    END HFP3TextGr;

    GRAPHIC HFP3SymbolGr BASED ON Test23.FixpunkteKategorie3.HFP3 =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := {Symbol_HFP};
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 403
        );
    END HFP3SymbolGr;

  END FixpunkteKategorie3;


  TOPIC Bodenbedeckung =

    DEPENDS ON Test23.Bodenbedeckung,
               Test23_gr.Bodenbedeckung;

    !! Flaechenfüllungen fuer Wald und bestockte Flaechen
    GRAPHIC BoFlaecheGr BASED ON Test23.Bodenbedeckung.BoFlaeche =
      Flaeche OF StandardSymbology.StandardSigns.SurfaceSign:
        (
          Geometry := Geometrie;
          Priority := 101
        ),
        WHERE (Art == #befestigt.Strasse_Weg) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #befestigt.Trottoir) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #befestigt.Verkehrsinsel) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #befestigt.Bahn) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #befestigt.Flugplatz) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #befestigt.Wasserbecken) (
          Sign := {Flaeche_Gewaesser}
        ),
        WHERE (Art == #befestigt.uebrige_befestigte) (
          Sign := {Flaeche_befestigt}
        ),
        WHERE (Art == #humusiert.Acker_Wiese_Weide) (
          Sign := {Flaeche_Wiese}
        ),
        WHERE (Art == #humusiert.Intensivkultur.Reben) (
          Sign := {Flaeche_humusiert}
        ),
        WHERE (Art == #humusiert.Intensivkulur.uebrige_Intensivkultur) (
          Sign := {Flaeche_humusiert}
        ),
        WHERE (Art == #humusiert.Gartenanlage) (
          Sign := {Flaeche_humusiert}
        ),
        WHERE (Art == #humusiert.Hoch_Flachmoor) (
          Sign := {Flaeche_humusiert}
        ),
        WHERE (Art == #humusiert.uebrige_humusierte) (
          Sign := {Flaeche_humusiert}
        ),
        WHERE (Art == #Gewaesser.stehendes) (
          Sign := {Flaeche_Gewaesser}
        ),
        WHERE (Art == #Gewaesser.fliessendes) (
          Sign := {Flaeche_Gewaesser}
        ),
        WHERE (Art == #Gewaesser.Schilfguertel) (
          Sign := {Flaeche_Gewaesser}
        ),
        WHERE (Art == #bestockt.geschlossener_Wald) (
          Sign := {Flaeche_bestockt}
        ),
        WHERE (Art == #bestockt.uebrige_bestockte) (
          Sign := {Flaeche_bestockt}
        ),
        WHERE (Art == #vegetationslos.Fels) (
          Sign := {Flaeche_vegetationslos}
        ),
        WHERE (Art == #vegetationslos.Geletscher_Firn) (
          Sign := {Flaeche_vegetationslos}
        ),
        WHERE (Art == #vegetationslos.Geroell_Sand) (
          Sign := {Flaeche_vegetationslos}
        ),
        WHERE (Art == #vegetationslos.Abbau_Deponie) (
          Sign := {Flaeche_vegetationslos}
        ),
        WHERE (Art == #vegetationslos.uebrige_Vegetationslose) (
          Sign := {Flaeche_vegetationslos}
        );
    END BoFlaecheGr;

    VIEW BoFlaecheBoundaryView
      AREA INSPECTION OF BoFlaeche_Geometrie_Line ~ Test23.Bodenbedeckung.BoFlaeche->Geometrie;
    =
    ATTRIBUTE
      ALL OF BoFlaeche_Geometrie_Line;
      Art1 := THISAREA->Art;
      Art2 := THATAREA->Art;
    END BoFlaecheBoundaryView;

    !! Liniensignatur fuer Flächenränder
    GRAPHIC BoFlaecheLinieGr BASED ON BoFlaecheBoundaryView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        ( !! Default
          Sign := {Linie_018_strichliert};
          Geometry := Geometry;
          Priority := 102
        ),
        WHERE (
          DEFINED(Art1) AND (
            (Art1 == #Gebaeude) OR
            (Art1 == #befestigt.StrasseWeg) OR
            (Art1 == #befestigt.Trottoir) OR
            (Art1 == #befestigt.Verkehrsinsel) OR
            (Art1 == #befestigt.Flugplatz) OR
            (Art1 == #befestigt.Wasserbecken) OR
            (Art1 == #Gewaesser.stehendes) OR
            (Art1 == #Gewaesser.fliessendes)
          )) (
          Sign := {Linie_018_ausgezogen}
        ),
        WHERE (
          DEFINED(Art2) AND (
            (Art2 == #Gebaeude) OR
            (Art2 == #befestigt.StrasseWeg) OR
            (Art2 == #befestigt.Trottoir) OR
            (Art2 == #befestigt.Verkehrsinsel) OR
            (Art2 == #befestigt.Flugplatz) OR
            (Art2 == #befestigt.Wasserbecken) OR
            (Art2 == #Gewaesser.stehendes) OR
            (Art2 == #Gewaesser.fliessendes)
          )) (
          Sign := {Linie_018_ausgezogen}
        );
    END BoFlaecheLinieGr;

    GRAPHIC GebaeudenummerTextGr BASED ON Test23_gr.Bodenbedeckung.GebaeudenummerPosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING GebaeudenummerPos->Pos->Groesse (
            {Text_14_kursiv} WHEN IN #klein,
            {Text_18_kursiv} WHEN IN #mittel,
            {Text_20_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Nummer;
          Geometry := GebaeudenummerPos->Pos->Pos;
          Rotation := GebaeudenummerPos->Pos->Ori;
          HAli := GebaeudenummerPos->Pos->HAli;
          VAli := GebaeudenummerPos->Pos->VAli;
          Priority := 104
        );
    END GebaeudenummerTextGr;

    GRAPHIC ObjektnameTextGr BASED ON Test23_gr.Bodenbedeckung.ObjektnamePosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING ObjektnamePos->Pos->Groesse (
            {Text_18_kursiv} WHEN IN #klein,
            {Text_20_kursiv} WHEN IN #mittel,
            {Text_23_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Objekt->Art;
          Geometry := ObjektnamePos->Pos->Pos;
          Rotation := ObjektnamePos->Pos->Ori;
          HAli := ObjektnamePos->Pos->HAli;
          VAli := ObjektnamePos->Pos->VAli;
          Priority := 104
        );
    END ObjektnameTextGr;

    GRAPHIC BoFlaecheSymbolGr BASED ON Test23_gr.Bodenbedeckung.BoFlaecheSymbolAssoc =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := ACCORDING Objekt->Art (
            {Symbol_Flussrichtung} WHEN IN #Gewaesser.fliessendes,
            {Symbol_Schilfguertel} WHEN IN #Gewaesser.Schilfguertel,
            {Symbol_Wasserbecken} WHEN IN #befestigt.Wasserbecken,
            {Symbol_Moor} WHEN IN #humusiert.Hoch_Flachmoor,
            {Symbol_Rebe} WHEN IN #humusiert.Intensivkultur.Reben,
            {Symbol_einzelner_Fels} WHEN IN #vegetationslos.Fels
          );
          Geometry := BoFlaecheSymbol->Pos;
          Rotation := BoFlaecheSymbol->Ori;
          Priority := 103
        );
    END BoFlaecheSymbolGr;

  END Bodenbedeckung;


  TOPIC Einzelobjekte =

    DEPENDS ON Test23.Einzelobjekte,
               Test23_gr.Einzelobjekte;

    VIEW LinienView
      UNION OF L1 ~ Test23.Einzelobjekte.Flaechenelement, L2 ~ Test23.Einzelobjekte.Linienelement;
    =
    ATTRIBUTE
      Art : Test23.Einzelobjekte.EOArt := L1->Art,L2->Art;
      Geometrie: POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord := L1->Geometrie,L2->Geometrie;
    END LinienView;

    GRAPHIC LinienGr BASED ON LinienView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        ( !! Default
          Sign := {Linie_018_ausgezogen};
          Geometry := Geometrie;
          Priority := 202
        ),
        WHERE (Art == #unterirdisches_Gebaeude) (
          Sign := {Linie_018_punktiert}
        ),
        WHERE (Art == #uebriger_Gebaeudeteil) (
          Sign := {Linie_018_strichliert2}
        ),
        WHERE (Art == #eingedoltes_oeffentliches_Gewaesser) (
          Sign := {Linie_018_punktiert}
        ),
        WHERE (Art == #Tunnel_Unterfuehrung_Gallerie) (
          Sign := {Linie_018_punktiert}
        ),
        WHERE (Art == #Reservoir) (
          Sign := {Linie_018_punktiert}
        ),
        WHERE (Art == #Unterstand) (
          Sign := {Linie_018_punktiert}
        ),
        WHERE (Art == #schmale_bestockte_Faeche) (
          Sign := {Linie_018_strichliert1}
        ),
        WHERE (Art == #schmaler_Weg) (
          Sign := {Linie_018_strichliert1}
        ),
        WHERE (Art == #Hochspannungsfreileitung) (
          Sign := {Linie_018_strichpunktiert1}
        ),
        WHERE (Art == #Druckleitung) (
          Sign := {Linie_018_strichpunktiert1}
        ),
        WHERE (Art == #Bahngeleise) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Luftseilbahn) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Gondelbahn_Sesselbahn) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Materialseilbahn) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Skilift) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Faehre) (
          Sign := {Linie_018_strichpunktiert2}
        ),
        WHERE (Art == #Achse) (
          Sign := {Linie_018_strichpunktiert2}
        );
    END LinienGr;

    GRAPHIC PunktelementGr BASED ON Test23.Einzelobjekte.Punktelement =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        ( !! Default
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 203
        ),
        WHERE (Art == #Grotte_Hoehleneingang) (
          Sign := {Symbol_Grotte_Hoehleneingang}
        ),
        WHERE (Art == #einzelner_Fels) (
          Sign := {Symbol_einzelner_Fels}
        ),
        WHERE (Art == #Mast_Antenne) (
          Sign := {Symbol_Mast_Antenne}
        ),
        WHERE (Art == #Quelle) (
          Sign := {Symbol_Quelle}
        ),
        WHERE (Art == #Bildstock_Kruzifix) (
          Sign := {Symbol_Bildstock_Kruzifix}
        ),
        WHERE (Art == #Denkmal) (
          Sign := {Symbol_Denkmal}
        ),
        WHERE (Art == #Faehre) (
          Sign := {Symbol_Faehre}
        ),
        WHERE (Art == #wichtiger_Einzelbaum) (
          Sign := {Symbol_Baum}
        ),
        WHERE (Art == #Bezugspunkt) (
          Sign := {Symbol_Bezugspunkt}
        );
    END PunktelementGr;

    GRAPHIC ObjektnameTextGr BASED ON Test23_gr.Einzelobjekte.ObjektnamePosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING ObjektnamePos->Pos->Groesse (
            {Text_18_kursiv} WHEN IN #klein,
            {Text_20_kursiv} WHEN IN #mittel,
            {Text_23_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Name;
          Geometry := ObjektnamePos->Pos->Pos;
          Rotation := ObjektnamePos->Pos->Ori;
          HAli := ObjektnamePos->Pos->HAli;
          VAli := ObjektnamePos->Pos->VAli;
          Priority := 204
        );
    END ObjektnameTextGr;

    GRAPHIC ObjektnummerTextGr BASED ON Test23_gr.Einzelobjekte.ObjektnummerPosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING ObjektnummerPos->Pos->Groesse (
            {Text_14_kursiv} WHEN IN #klein,
            {Text_18_kursiv} WHEN IN #mittel,
            {Text_20_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Nummer;
          Geometry := ObjektnummerPos->Pos->Pos;
          Rotation := ObjektnummerPos->Pos->Ori;
          HAli := ObjektnummerPos->Pos->HAli;
          VAli := ObjektnummerPos->Pos->VAli;
          Priority := 204
        );
    END ObjektnummerTextGr;

  END Einzelobjekte;


  TOPIC Nomenklatur =

    DEPENDS ON Test23.Nomenklatur,
               Test23_gr.Nomenklatur;

    GRAPHIC FlurnameGr BASED ON Test23_gr.Nomenklatur.FlurnamePosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING FlurnamePos->Pos->Groesse (
            {Text_40_kursiv} WHEN IN #klein,
            {Text_50_kursiv} WHEN IN #mittel,
            {Text_70_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Name;
          Geometry := FlurnamePos->Pos->Pos;
          Rotation := FlurnamePos->Pos->Ori;
          HAli := FlurnamePos->Pos->HAli;
          VAli := FlurnamePos->Pos->VAli;
          Priority := 504
        );
    END FlurnameGr;

    GRAPHIC OrtsnameGr BASED ON Test23_gr.Nomenklatur.OrtsnamePosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING OrtsnamePos->Pos->Groesse (
            {Text_40_normal} WHEN IN #klein,
            {Text_50_normal} WHEN IN #mittel,
            {Text_70_normal} WHEN IN #gross
          );
          Txt := Objekt->Name;
          Geometry := OrtsnamePos->Pos->Pos;
          Rotation := OrtsnamePos->Pos->Ori;
          HAli := OrtsnamePos->Pos->HAli;
          VAli := OrtsnamePos->Pos->VAli;
          Priority := 504
        );
    END OrtsnameGr;

    GRAPHIC GelaendenameGr BASED ON Test23_gr.Nomenklatur.GelaendenamePosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        (
          Sign := ACCORDING GelaendenamePos->Pos->Groesse (
            {Text_30_kursiv} WHEN IN #klein,
            {Text_40_kursiv} WHEN IN #mittel,
            {Text_50_kursiv} WHEN IN #gross
          );
          Txt := Objekt->Name;
          Geometry := GelaendenamePos->Pos->Pos;
          Rotation := GelaendenamePos->Pos->Ori;
          HAli := GelaendenamePos->Pos->HAli;
          VAli := GelaendenamePos->Pos->VAli;
          Priority := 504
        );
    END GelaendenameGr;

  END Nomenklatur;


  TOPIC Liegenschaften =

    DEPENDS ON Test23.Liegenschaften,
               Test23_gr.Liegenschaften;

    GRAPHIC GrenzpunktSymbolGr BASED ON Test23_gr.Liegenschaften.GrenzpunktSymbolAssoc =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := ACCORDING Objekt->Punktzeichen (
            {Symbol_GP_Stein} WHEN IN #Stein,
            {Symbol_GP_Kunststoffzeichen} WHEN IN #Kunststoffzeichen,
            {Symbol_GP_Bolzen} WHEN IN #Bolzen,
            {Symbol_GP_Rohr} WHEN IN #Rohr,
            {Symbol_GP_Pfahl} WHEN IN #Pfahl,
            {Symbol_GP_Kreuz} WHEN IN #Kreuz,
            {Symbol_GP_unversichert} WHEN IN #unversichert
          );
          Geometry := Objekt->Geometrie;
          Rotation := GrenzpunktSymbol->Ori;
          Priority := 303
        );
    END GrenzpunktSymbolGr;

    GRAPHIC GrundstueckTextGr BASED ON Test23_gr.Liegenschaften.GrundstueckPosAssoc =
      Text OF StandardSymbology.StandardSigns.TextSign:
        ( !! Default
          Sign := ACCORDING GrundstueckPos->Pos->Groesse (
            {Text_20_kursiv} WHEN IN #klein,
            {Text_25_kursiv} WHEN IN #mittel,
            {Text_30_kursiv} WHEN IN #gross
          );
          Geometry := GrundstueckPos->Pos->Pos;
          Rotation := GrundstueckPos->Pos->Ori;
          HAli := GrundstueckPos->Pos->HAli;
          VAli := GrundstueckPos->Pos->VAli;
          Priority := 304
        ),
        WHERE (Objekt->Art <> #Liegenschaft) (
          Txt := CFormat("(%s)",Objekt->Nummer);
          Priority := 305
        );
    END GrundstueckTextGr;

    VIEW LiegenschaftLinienView
      AREA INSPECTION OF Test23.Liegenschaften.Liegenschaft->Geometrie;
    =
    ATTRIBUTE
      ALL OF Liegenschaft;
    END LiegenschaftLinienView;

    GRAPHIC LiegenschaftGr BASED ON LiegenschaftLinienView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        (
          Sign := {Linie_050_ausgezogen};
          Geometry := Geometry;
          Priority := 301
        );
    END LiegenschaftGr;

    VIEW SelbstRechtLinienView
      PROJECTION OF Test23.Liegenschaften.SelbstRecht;
    =
    ATTRIBUTE
      Geometry : POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord := SelbstRecht->Geometrie;
    END SelbstRechtLinienView;

    GRAPHIC SelbstRechtGr BASED ON SelbstRechtLinienView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        (
          Sign := {Linie_035_strichliert};
          Geometry := Geometry;
          Priority := 302
        );
    END SelbstRechtGr;

    VIEW BergwerkLinienView
      PROJECTION OF Test23.Liegenschaften.Bergwerk;
    =
    ATTRIBUTE
      Geometry : POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord := Bergwerk->Geometrie;
    END BergwerkLinienView;

    GRAPHIC BergwerkGr BASED ON BergwerkLinienView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        (
          Sign := {Linie_035_strichliert};
          Geometry := Geometry;
          Priority := 302
        );
    END BergwerkGr;

  END Liegenschaften;


  TOPIC Rohrleitungen =

    DEPENDS ON Test23.Rohrleitungen,
               Test23_gr.Rohrleitungen;

    VIEW FlaechenelementLinienView
      INSPECTION OF Test23.Rohrleitungen.Leitungsobjekt->Geometrie;
      BASE Leitungsobjekt EXTENDED BY Test23.Rohrleitungen.Flaechenelement
    =
    ATTRIBUTE
      Geometrie: POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord := lineOf(THIS);
    END FlaechenelementLinienView;

    GRAPHIC FlaechenelementGr BASED ON FlaechenelementLinienView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        (
          Sign := {Linie_018_strichpunktiert1};
          Geometry := Geometrie;
          Priority := 602
        );
    END FlaechenelementGr;

    VIEW LinienelementView
      INSPECTION OF Test23.Rohrleitungen.Leitungsobjekt->Geometrie;
      BASE Leitungsobjekt EXTENDED BY Test23.Rohrleitungen.Linienelement
    =
    ATTRIBUTE
      Geometrie: POLYLINE WITH (STRAIGHTS,ARCS) VERTEX Test23.LKoord := lineOf(THIS);
    END LinienelementView;

    GRAPHIC LinienelementGr BASED ON LinienelementView =
      Linie OF StandardSymbology.StandardSigns.PolylineSign:
        (
          Sign := {Linie_018_strichpunktiert1};
          Geometry := Geometrie;
          Priority := 602
        );
    END LinienelementGr;

    VIEW PunktelementView
      INSPECTION OF Test23.Rohrleitungen.Leitungsobjekt->Geometrie;
!!!      BASE Leitungsgeometrie RESTRICTED TO Test23.Rohrleitungen.Punktelement;
    =
    ATTRIBUTE
      Geometrie: Test23.LKoord := pointOf(THIS);
    END PunktelementView;

    GRAPHIC PunktelementGr BASED ON PunktelementView =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := {Symbol_kleiner_Kreis};
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 603
        );
    END PunktelementGr;

    GRAPHIC SignalpunktGr BASED ON Test23.Rohrleitungen.Signalpunkt =
      Symbol OF StandardSymbology.StandardSigns.SymbolSign:
        (
          Sign := {Symbol_kleines_Kreuz};
          Geometry := Geometrie;
          Rotation := 0.0;
          Priority := 603
        ),
        WHERE (Punktart == #Signal) (
          Sign := {Symbol_Signal}
        ),
        WHERE (Punktart == #Tafel_Stein) (
          Sign := {Symbol_Tafel_Stein}
        );
    END SignalpunktGr;

  END Rohrleitungen;

END Test23_Graphik.

