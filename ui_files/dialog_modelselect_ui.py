# Form implementation generated from reading ui file 'c:\Users\mauri\Repos\GitHub\iligui\ui_files\dialog_modelselect.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_modelselectDialog(object):
    def setupUi(self, modelselectDialog):
        modelselectDialog.setObjectName("modelselectDialog")
        modelselectDialog.resize(468, 266)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("c:\\Users\\mauri\\Repos\\GitHub\\iligui\\ui_files\\../icons/interlis.png"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        modelselectDialog.setWindowIcon(icon)
        modelselectDialog.setStyleSheet("QRadioButton::indicator:checked {\n"
"    image: url(icons/check-circle-green.svg);\n"
"}\n"
"QRadioButton::indicator:unchecked {\n"
"    image: url(icons/circle.svg);\n"
"}")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(modelselectDialog)
        self.verticalLayout_2.setContentsMargins(20, 10, 20, 10)
        self.verticalLayout_2.setSpacing(6)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.Title = QtWidgets.QLabel(parent=modelselectDialog)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        self.Title.setFont(font)
        self.Title.setAlignment(QtCore.Qt.AlignmentFlag.AlignLeading|QtCore.Qt.AlignmentFlag.AlignLeft|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.Title.setObjectName("Title")
        self.verticalLayout_2.addWidget(self.Title, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.selectionFrame = QtWidgets.QFrame(parent=modelselectDialog)
        self.selectionFrame.setEnabled(True)
        self.selectionFrame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.selectionFrame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.selectionFrame.setObjectName("selectionFrame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.selectionFrame)
        self.verticalLayout.setObjectName("verticalLayout")
        self.transferfileRadiobutton = QtWidgets.QRadioButton(parent=self.selectionFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.transferfileRadiobutton.sizePolicy().hasHeightForWidth())
        self.transferfileRadiobutton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.transferfileRadiobutton.setFont(font)
        self.transferfileRadiobutton.setStyleSheet("")
        self.transferfileRadiobutton.setCheckable(True)
        self.transferfileRadiobutton.setChecked(True)
        self.transferfileRadiobutton.setObjectName("transferfileRadiobutton")
        self.radioButtonGroup = QtWidgets.QButtonGroup(modelselectDialog)
        self.radioButtonGroup.setObjectName("radioButtonGroup")
        self.radioButtonGroup.addButton(self.transferfileRadiobutton)
        self.verticalLayout.addWidget(self.transferfileRadiobutton, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.localsearchRadiobutton = QtWidgets.QRadioButton(parent=self.selectionFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.localsearchRadiobutton.sizePolicy().hasHeightForWidth())
        self.localsearchRadiobutton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.localsearchRadiobutton.setFont(font)
        self.localsearchRadiobutton.setObjectName("localsearchRadiobutton")
        self.radioButtonGroup.addButton(self.localsearchRadiobutton)
        self.verticalLayout.addWidget(self.localsearchRadiobutton, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.onlinesearchRadiobutton = QtWidgets.QRadioButton(parent=self.selectionFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.onlinesearchRadiobutton.sizePolicy().hasHeightForWidth())
        self.onlinesearchRadiobutton.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(True)
        self.onlinesearchRadiobutton.setFont(font)
        self.onlinesearchRadiobutton.setIconSize(QtCore.QSize(20, 20))
        self.onlinesearchRadiobutton.setChecked(False)
        self.onlinesearchRadiobutton.setObjectName("onlinesearchRadiobutton")
        self.radioButtonGroup.addButton(self.onlinesearchRadiobutton)
        self.verticalLayout.addWidget(self.onlinesearchRadiobutton, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.queryFrame = QtWidgets.QFrame(parent=self.selectionFrame)
        self.queryFrame.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.queryFrame.setFrameShadow(QtWidgets.QFrame.Shadow.Raised)
        self.queryFrame.setObjectName("queryFrame")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.queryFrame)
        self.verticalLayout_3.setContentsMargins(27, 0, 0, 0)
        self.verticalLayout_3.setSpacing(5)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.searchButton = QtWidgets.QToolButton(parent=self.queryFrame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.searchButton.sizePolicy().hasHeightForWidth())
        self.searchButton.setSizePolicy(sizePolicy)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("c:\\Users\\mauri\\Repos\\GitHub\\iligui\\ui_files\\../icons/search.svg"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        self.searchButton.setIcon(icon1)
        self.searchButton.setToolButtonStyle(QtCore.Qt.ToolButtonStyle.ToolButtonTextBesideIcon)
        self.searchButton.setObjectName("searchButton")
        self.verticalLayout_3.addWidget(self.searchButton)
        self.lineEdit = QtWidgets.QLineEdit(parent=self.queryFrame)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.lineEdit.setFont(font)
        self.lineEdit.setInputMask("")
        self.lineEdit.setText("")
        self.lineEdit.setFrame(True)
        self.lineEdit.setCursorPosition(0)
        self.lineEdit.setCursorMoveStyle(QtCore.Qt.CursorMoveStyle.LogicalMoveStyle)
        self.lineEdit.setClearButtonEnabled(True)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_3.addWidget(self.lineEdit)
        self.verticalLayout.addWidget(self.queryFrame, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.verticalLayout_2.addWidget(self.selectionFrame, 0, QtCore.Qt.AlignmentFlag.AlignTop)
        self.okButton = QtWidgets.QPushButton(parent=modelselectDialog)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Expanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.okButton.sizePolicy().hasHeightForWidth())
        self.okButton.setSizePolicy(sizePolicy)
        self.okButton.setMinimumSize(QtCore.QSize(170, 0))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        self.okButton.setFont(font)
        self.okButton.setStyleSheet("QPushButton[objectName^=\"okButton\"]:hover {\n"
"    background-color : rgb(230,230,230);\n"
"    border-radius: 20px;\n"
"    border-style: outset;\n"
"}\n"
"\n"
"")
        self.okButton.setFlat(True)
        self.okButton.setObjectName("okButton")
        self.verticalLayout_2.addWidget(self.okButton, 0, QtCore.Qt.AlignmentFlag.AlignHCenter|QtCore.Qt.AlignmentFlag.AlignTop)

        self.retranslateUi(modelselectDialog)
        QtCore.QMetaObject.connectSlotsByName(modelselectDialog)

    def retranslateUi(self, modelselectDialog):
        _translate = QtCore.QCoreApplication.translate
        modelselectDialog.setWindowTitle(_translate("modelselectDialog", "Model Selection"))
        self.Title.setText(_translate("modelselectDialog", "Select a Model"))
        self.transferfileRadiobutton.setToolTip(_translate("modelselectDialog", "<html><head/><body><p><span style=\" font-weight:700;\">Autosearch function</span></p><p>A Model File is not always strictly necessary. Since each transfer file has the model name included in the containers of its structure, an automatic search of the model name can be done in common locations. </p><p>These locations include: The directory your transfer-file is in. The most common online repositories. The Cache of the interlis validator. If you select a file locally, or enter an online link to a Transfer-File inside of an online repository, the path will be added to the automatic search locations of your Validator. </p></body></html>"))
        self.transferfileRadiobutton.setText(_translate("modelselectDialog", "Automatically from Datafile"))
        self.localsearchRadiobutton.setToolTip(_translate("modelselectDialog", "<html><head/><body><p><span style=\" font-weight:700;\">Load a Local Transfer File</span></p><p>Only needs to be done for a given path once. Afterwards the repository of that model is added atuomatically to autosearch</p></body></html>"))
        self.localsearchRadiobutton.setText(_translate("modelselectDialog", "Manually from Local Source"))
        self.onlinesearchRadiobutton.setToolTip(_translate("modelselectDialog", "<html><head/><body><p><span style=\" font-weight:700;\">Load a Online Transfer File</span></p><p><br/></p><p>Transfer Files can also be stored on online repositories. </p><p>For Example: https://models.geo.admin.ch/BAFU/NoisePollutionRegisterForNationalRoads_V1_1.ili</p><p>Only needs to be done for a given path once. Afterwards the repository of that model is added atuomatically to autosearch</p></body></html>"))
        self.onlinesearchRadiobutton.setText(_translate("modelselectDialog", "Manually from Online Source"))
        self.searchButton.setToolTip(_translate("modelselectDialog", "<html><head/><body><p><span style=\" font-weight:700;\">Open the Online INTERLIS Model Browser</span></p><p>This is a Webapplication to search for INTERLIS-Models in publicly available Repositories. If you dont know where to find a model online link, this may be a good start, as you can search for your model directly with attributes such as Name, Filename, Publisher, or Model-Version.</p></body></html>"))
        self.searchButton.setText(_translate("modelselectDialog", "INTERLIS Model Browser"))
        self.lineEdit.setToolTip(_translate("modelselectDialog", "<html><head/><body><p><span style=\" font-weight:700;\">Enter URL Link to an INTERLIS Model</span></p><p>This must be a URL leading to the Model specifically. The reason for this is, that iligui will check to see if the model you have selected even conforms to the File you have selected. </p><p>Think of you File as a Paper you have written, and the Model as a Grammar-Book to check your writing. There is no point in even beginning to check your German Written Essay with an English Grammar book, since you can see that it wont fit before even opening it. <br/>Thus you must choose a model, that can actually realistically conform to the datafile you want to validate.</p></body></html>"))
        self.lineEdit.setPlaceholderText(_translate("modelselectDialog", "Enter URL Link to an INTERLIS .ili Model"))
        self.okButton.setText(_translate("modelselectDialog", "OK"))
